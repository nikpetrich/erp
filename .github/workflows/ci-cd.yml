name: Docker CI CD

on:
  push:
    branches: ["main", "dev"]
  pull_request:
    branches: ["main", "dev"]

env:
  BACKEND_IMAGE_NAME: erp/backend:latest
  FRONTEND_IMAGE_NAME: erp/frontend:latest
  BACKUP_IMAGE_NAME: erp/backup:latest

jobs:
  publish:
    name: publish images
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Login
        run: |
          echo ${{ secrets.PAT }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build and publish
        run: |
          docker compose -f docker-compose-prod-build.yml build
          docker images
          docker push ${{ env.BACKEND_IMAGE_NAME }}
          docker push ${{ env.FRONTEND_IMAGE_NAME }}
          docker push ${{ env.BACKUP_IMAGE_NAME }}

  # deploy:
  #   needs: publish
  #   name: deploy image
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: install ssh keys
  #       run: |
  #         install -m 600 -D /dev/null ~/.ssh/id_rsa
  #         echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
  #         ssh-keyscan -H ${{ secrets.SSH_HOST }} > ~/.ssh/known_hosts
  #     - name: connect and pull
  #       run: |
  #         ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "\
  #         [ -d ${{ github.repository }} ] || mkdir -p ${{ github.repository }} && \
  #         cd ${{ github.repository }} && \
  #         curl -O -L https://raw.githubusercontent.com/${{ github.repository }}/master/docker-compose-prd.yml && \
  #         docker compose -f docker-compose-prd.yml pull && \
  #         docker compose -f docker-compose-prd.yml up -d && \
  #         exit"
  #     - name: cleanup
  #       run: rm -rf ~/.ssh
