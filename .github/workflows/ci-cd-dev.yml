name: Docker ci/cd development

on:
  push:
    branches: ["dev"]
  pull_request:
    branches: ["dev"]

env:
  REGISTRY: ghcr.io
  BACKEND_IMAGE_NAME: ${{ github.actor }}/erp/backend:dev
  FRONTEND_IMAGE_NAME: ${{ github.actor }}/erp/frontend:dev
  BACKUP_IMAGE_NAME: ${{ github.actor }}/erp/backup:dev

jobs:
  publish:
    name: publish images
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Login
        run: |
          echo ${{ secrets.PAT }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build and publish
        run: |
          export TAG=dev
          docker compose -f docker-compose-build.yml build
          docker images
          docker push ${{ env.REGISTRY }}/${{ env.BACKEND_IMAGE_NAME }}
          docker push ${{ env.REGISTRY }}/${{ env.FRONTEND_IMAGE_NAME }}
          docker push ${{ env.REGISTRY }}/${{ env.BACKUP_IMAGE_NAME }}
        env:
          TAG: dev

  deploy:
    needs: publish
    name: deploy images
    runs-on: ubuntu-latest

    steps:
      - name: install ssh keys
        run: |
          install -m 600 -D /dev/null ~/.ssh/id_rsa
          echo "${{ secrets.SSH_PRIVATE_KEY_DEV }}" > ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SSH_HOST_DEV }} > ~/.ssh/known_hosts

      - name: Checkout code
        uses: actions/checkout@v2

      - name: connect and pull
        run: |
          export TAG=dev
          ssh ${{ secrets.SSH_USER_DEV }}@${{ secrets.SSH_HOST_DEV }} "\
          docker compose -f docker-compose-deploy.yml pull && \
          docker compose -f docker-compose-deploy.yml up -d && \
          exit"
        env:
          TAG: dev

      - name: cleanup
        run: rm -rf ~/.ssh
